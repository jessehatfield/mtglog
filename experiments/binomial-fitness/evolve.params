print-params = true
print-unaccessed-params = true

# For experimental purposes, use single-threading and hard-coded seed
breedthreads = 1
evalthreads = 1
seed.0 = 912345678

# Standard defaults for most of the architecture
state = ec.simple.SimpleEvolutionState
pop = ec.Population
init = ec.simple.SimpleInitializer
finish = ec.simple.SimpleFinisher
breed = ec.simple.SimpleBreeder
eval = ec.simple.SimpleEvaluator
stat = ec.simple.SimpleStatistics
exch = ec.simple.SimpleExchanger
quit-on-run-complete = true
checkpoint = false
checkpoint-prefix = autocorrelation
checkpoint-modulo = 20
pop.subpops = 1
pop.subpop.0 = ec.Subpopulation
pop.subpop.0.duplicate-retries = 0

# Problem setup: operates on bit vectors, using binomial fitness
eval.problem = mtg.logic.ec.stochastic.example.BinaryAutocorrelationProblem
eval.merge = mean
pop.subpop.0.species = ec.vector.BitVectorSpecies
pop.subpop.0.species.fitness = mtg.logic.ec.stochastic.BinomialPosteriorFitness
pop.subpop.0.species.fitness.prior.alpha = 1
pop.subpop.0.species.fitness.prior.beta = 1
pop.subpop.0.species.fitness.memory = false
pop.subpop.0.species.ind = ec.vector.BitVectorIndividual

# Breeding parameters: crossover type and mutation prob
vector.species.crossover-type = one
pop.subpop.0.species.mutation-prob = 0.0078125
pop.subpop.0.species.pipe = ec.vector.breed.VectorMutationPipeline
pop.subpop.0.species.pipe.source.0 = ec.vector.breed.VectorCrossoverPipeline

# Problem scale parameters: individual size, population size, trials per individual, number of generations
pop.subpop.0.species.genome-size = 32
pop.subpop.0.size = 100
generations = 500
eval.num-tests = 20
jobs = 20

# Experiment variable: selection mechanism
#pop.subpop.0.species.pipe.source.0.source.0 = ec.select.TournamentSelection
#pop.subpop.0.species.pipe.source.0.source.1 = ec.select.TournamentSelection
pop.subpop.0.species.pipe.source.0.source.0 = mtg.logic.ec.stochastic.StochasticTournamentSelection
pop.subpop.0.species.pipe.source.0.source.1 = mtg.logic.ec.stochastic.StochasticTournamentSelection
select.tournament.size = 2

# Output files
stat.file = $experiments/binomial-fitness/out.stat
stat.num-children = 1
stat.child.0 = mtg.logic.ec.stochastic.example.BinaryAutocorrelationStatistics
stat.child.0.file = $experiments/binomial-fitness/progress.tsv
