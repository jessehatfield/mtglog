# Output file
stat.file = $problems/oops/test.stat

# Input files
mtg.problem.spec = $problems/oops/oopsProblem.yaml
mtg.deck.template = $problems/oops/legacyOops.dec

# Evaluation budget: trials per individual * individuals per generation * number of generations
mtg.problem.games = 5
pop.subpop.0.size = 16
generations = 5

# Parallelism
breedthreads = 1
evalthreads = 8
seed.0 = 1819492270
seed.1 = 903983176
seed.2 = 362633637
seed.3 = 823470748
seed.4 = 938869992
seed.5 = 436502194
seed.6 = 714285973
seed.7 = 1411780914
seed.8 = 2845553807

state = ec.simple.SimpleEvolutionState
pop = ec.Population
init = ec.simple.SimpleInitializer
finish = ec.simple.SimpleFinisher
breed = ec.simple.SimpleBreeder
eval = ec.simple.SimpleEvaluator
stat = ec.simple.SimpleStatistics
exch = ec.simple.SimpleExchanger

quit-on-run-complete = true
checkpoint = false
checkpoint-prefix = mtg-oops
checkpoint-modulo = 1

pop.subpops = 1
pop.subpop.0 = ec.Subpopulation
pop.subpop.0.duplicate-retries = 0

pop.subpop.0.species = mtg.logic.ec.DecklistVectorSpecies

pop.subpop.0.species.fitness = ec.simple.SimpleFitness

pop.subpop.0.species.crossover-type = any
pop.subpop.0.species.crossover-prob = 0
pop.subpop.0.species.mutation-prob = 0.05
pop.subpop.0.species.mutation-type = reset
pop.subpop.0.species.ind = mtg.logic.ec.DecklistVectorIndividual

pop.subpop.0.species.pipe = ec.vector.breed.VectorMutationPipeline
pop.subpop.0.species.pipe.source.0 = mtg.logic.ec.DecklistCrossoverPipeline
pop.subpop.0.species.pipe.source.0.max = 4
pop.subpop.0.species.pipe.source.0.source.0 = ec.select.TournamentSelection
pop.subpop.0.species.pipe.source.0.source.1 = ec.select.TournamentSelection
select.tournament.size = 2

eval.problem = mtg.logic.ec.MtgProblem
